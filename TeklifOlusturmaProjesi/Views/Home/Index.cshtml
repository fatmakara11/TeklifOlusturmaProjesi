@model ORM.Models.Models.Teklif


@{
    ViewData["Title"] = "Home Page";
    // var urunler = ViewBag.Urun as IEnumerable<Urun>;
    // var musteriler = new SelectList(ViewBag.Musteri as IEnumerable<Musteri>, "MusteriID", "MusteriAdı");
    // var aracıKurumlar= new SelectList(ViewBag.AracıKurum as IEnumerable<AracıKurum>, "AracıKurumID", "AracıKurumAdı");
    List<ORM.Models.Models.Musteri> musteriler = ViewBag.Musteri;
    List<ORM.Models.Models.AracıKurum> aracıKurumlar = ViewBag.AracıKurum;
    List<ORM.Models.Models.Urun> urunler = ViewBag.Urun;
    // urunler=ViewBag.Urun;
}


       <form asp-action="Index" asp-controller="Home" method="post">
           <div class="custom-container">
               <div class="top-section">
                   <div class="left-section">
                       <div class="custom-section">
                           <label for="musteri">Müşteri Seçiniz:</label>
                           <div class="dropdown-container">
                               @Html.DropDownListFor(x => x.MusteriID, new SelectList(musteriler, "MusteriID", "MusteriAdı"), "Müşteri Seçiniz", htmlAttributes: new { @class = "form-select form-select-solid" })
                               <button type="button" id="musteriEkle" class="add-button">+</button>
                           </div>
                       </div>

                       <div class="custom-section">
                           <label for="araciKurum">Aracı Kurum Seçiniz:</label>
                           <div class="dropdown-container">
                               @Html.DropDownListFor(x => x.AracıKurumID, new SelectList(aracıKurumlar, "AracıKurumID", "AracıKurumAdı"), "Aracı Kurum Seçiniz", htmlAttributes: new { @class = "form-select form-select-solid", })

                               <button id="aracıKurumEkle" class="add-button">+</button>
                           </div>
                       </div>
                   </div>
                   <div class="right-section">
                       <div class="custom-section">
                           <label for="urun">Ürün Seçiniz:</label>
                           <div class="dropdown-container">

                               @Html.DropDownListFor(x => x.ÜrünID, new SelectList(urunler, "ÜrünID", "ÜrünAdı"), "Ürün Seçiniz", htmlAttributes: new { @class = "form-select form-select-solid", @onchange = "getUrunDetay(this.value);" })

                           </div>
                           <div class="urun-detay">
                               <div>
                                   <label for="Birim">Birimi:</label>
                                   @Html.TextBoxFor(x => x.Birim, new { style = "background-color:white", @class = "form-control", disabled = "disabled", @Value = @Model.Birim })
                               </div>
                               <div>
                                   <label for="BirimFiyat">Birim Fiyat:</label>
                                   @Html.TextBoxFor(x => x.BirimFiyat, new { id = "BirimFiyat", @class = "form-control", oninput = "calculateTotal()" })
                               </div>
                               <div>
                                   <label for="StokAdeti">Stok Adedi:</label>
                                   <input type="text" id="StokAdeti" style="background-color:white" disabled>
                               </div>
                           </div>
                       </div>
                   </div>
               </div>

               <div class="bottom-section">
                   <div class="custom-section">

                       <label for="Adet">Adet Giriniz:</label>
                       @Html.TextBoxFor(x => x.Adet, new { min = "1", placeholder = "Adet giriniz", @class = "form-control", type = "number", oninput = "calculateTotal()" })
                   </div>

                   <div class="custom-section">
                       <label for="ToplamFiyat">Toplam Fiyat:</label>

                       @Html.TextBoxFor(x => x.ToplamFiyat, new { style = "background-color:white", @class = "form-control", disabled = "disabled" })
                   </div>

                   <div class="custom-section">
                       <button id="teklifOlustur" type="submit" class="submit-button btn  btn-block">
                           <label>Teklif Oluştur</label>
                       </button>
                   </div>

               </div>

               <div class="table-responsive">
                   <table class="table">
                       <td style=" font-weight:bold;">TeklifID</td>
                       <td style=" font-weight:bold;">Müsteri</td>
                       <td style=" font-weight:bold;">AracıKurum</td>
                       <td style=" font-weight:bold;">Ürün</td>
                       <td style=" font-weight:bold;">Birim Fiyatı</td>
                       <td style=" font-weight:bold;">Toplam Fiyatı </td>
                       <td style=" font-weight:bold;">Oluşturma Zamanı</td>
                       <td style=" font-weight:bold;">Güncelleme Zamanı</td>
                       <td style=" font-weight:bold;">Aktif</td>
                       <td style=" font-weight:bold;">Pasif</td>
                   </table>
                   <tbody id="offerTableBody">
                       <!-- veri tabanımdaki bağlantılar buraya gelecek  -->
                   </tbody>
               </div>

           </div>
       </form>


       <!-- Modal HTML -->
       <div id="modal" class="modal">
           <div class="modal-content">
               <span class="close">&times;</span>
               <h2 id="modalTitle">Yeni Eklemek İçin</h2>
               <label for="newItem">İsmini Giriniz:</label>
               <input type="text" id="newItem" placeholder="Bilgi giriniz">
               <button id="addButton" type="button" class="add-button btn-primary mt-5 mb-3">Ekle</button>
           </div>

       </div>




       <script>

           document.addEventListener('DOMContentLoaded', () => {
               const modal = document.getElementById('modal');
               const closeModal = document.querySelector('.modal .close');
               const addButton = document.getElementById('addButton');
               const modalTitle = document.getElementById('modalTitle');

               document.getElementById('musteriEkle').onclick = () => openModal('Müşteri Ekle');
               document.getElementById('aracıKurumEkle').onclick = () => openModal('Aracı Kurum Ekle');


               closeModal.onclick = () => closeModalFunc();
               window.onclick = (event) => {
                   if (event.target === modal) {
                       closeModalFunc();
                   }
               };
               addButton.onclick = () => {
                   const element = modalTitle.className;
                   const newItem = document.getElementById('newItem').value;
                   $.post("/Home/Add", { element: element, newItem: newItem }, function (data) {
                       if (data) {
                           alert("Başarıyla eklendi!");
                           location.reload(); // Sayfayı yeniden yükleyerek yeni eklenen öğeleri gösterebilirsiniz.
                       } else {
                           alert("Eklenirken bir hata oluştu!");
                       }
                   });

               };


               function openModal(title) {
                   modalTitle.innerText = title;
                   if (title == "Müşteri Ekle") {
                       modalTitle.className = "musteri";
                   } else {
                       modalTitle.className = "aracı_kurum";
                   }

                   modal.style.display = 'block';
               }

               function closeModalFunc() {
                   modal.style.display = 'none';
               }
           });














           function getUrunDetay(ÜrünID) {
               debugger;
               fetch(`/Home/GetUrunDetay/${ÜrünID}`)
                   .then(response => response.json())
                   .then(data => {
                       document.getElementById('Birim').value = data.birim;
                       document.getElementById('BirimFiyat').value = data.birimFiyat;
                       document.getElementById('StokAdeti').value = data.stokAdeti;
                       document.getElementById('Adet').max = data.stokAdeti;
                       calculateTotal();
                   })
                   .catch(error => console.error('Error:', error));
           }

           function calculateTotal() {
               const BirimFiyat = parseFloat(document.getElementById('BirimFiyat').value) || 0;
               const Adet = parseFloat(document.getElementById('Adet').value) || 0;
               const ToplamFiyat = BirimFiyat * Adet;
               document.getElementById('ToplamFiyat').value = ToplamFiyat.toFixed(2);
           }











       </script>