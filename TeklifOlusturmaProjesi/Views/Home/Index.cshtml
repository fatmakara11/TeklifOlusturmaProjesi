@model ORM.Models.Models.Teklif


@{
    ViewData["Title"] = "Home Page";
    List<ORM.Models.Models.Musteri> musteriler = ViewBag.Musteri;
    List<ORM.Models.Models.AracıKurum> aracıKurumlar = ViewBag.AracıKurum;
    List<ORM.Models.Models.Urun> urunler = ViewBag.Urun;
    List<ORM.Models.Models.Teklif> teklifler = ViewBag.Teklif;


}

<form id="teklifForm" asp-action="Index" asp-controller="Home" method="post">
    <div class="custom-container">
        <div class="top-section">
            <div class="left-section">
                <div class="custom-section">
                    <label for="musteri">Müşteri Seçiniz:</label>
                    <div class="dropdown-container">
                        @*  <select id="musteri">
                        @foreach (var musteri in musteriler)
                        {
                        <option value="@musteri.MusteriID">@musteri.MusteriAdı</option>
                        }

                        </select> *@
                        @Html.DropDownListFor(x => x.MusteriID, new SelectList(musteriler, "MusteriID", "MusteriAdı"), "Müşteri Seçiniz", htmlAttributes: new { @class = "form-select form-select-solid" })

                        <button id="musteriEkle" class="add-button">+</button>
                    </div>
                </div>

                <div class="custom-section">
                    <label for="araciKurum">Aracı Kurum Seçiniz:</label>
                    <div class="dropdown-container">
                        @*  <select id="araciKurum">
                        @foreach (var aracıKurum in aracıKurumlar)
                        {
                        <option value="@aracıKurum.AracıKurumID">@aracıKurum.AracıKurumAdı</option>
                        }
                        </select> *@
                        @Html.DropDownListFor(x => x.AracıKurumID, new SelectList(aracıKurumlar, "AracıKurumID", "AracıKurumAdı"), "Aracı Kurum Seçiniz", htmlAttributes: new { @class = "form-select form-select-solid", })

                        <button id="aracıKurumEkle" class="add-button">+</button>
                    </div>
                </div>
            </div>
            <div class="right-section">
                <div class="custom-section">
                    <label for="urun">Ürün Seçiniz:</label>
                    <div class="dropdown-container">
                        @* <select id="urun" onchange="getUrunDetay(this.value)">
                        <option value="" disabled selected>Ürün seçiniz</option>
                        @foreach (var urun in urunler)
                        {
                        <option value="@urun.ÜrünID">@urun.ÜrünAdı</option>
                        }
                        </select> *@
                        @Html.DropDownListFor(x => x.ÜrünID, new SelectList(urunler, "ÜrünID", "ÜrünAdı"), "Ürün SeçinizM", htmlAttributes: new { @class = "form-control", @onchange = "getUrunDetay(this.value);" })
                    </div>
                    <div class="urun-detay">
                        <div>
                            <label for="birim">Birimi:</label>
                            @Html.TextBoxFor(s => s.Birim, new { @style = "background-color:white", @class = "form-control", @readonly = "readonly" })
                        </div>
                        <div>
                            <label for="birimFiyat">Birim Fiyat:</label>
                            @Html.TextBoxFor(m => m.BirimFiyat, new { @class = "form-control", oninput = "calculateTotal()" })
                        </div>
                        <div>
                            <label for="stokAdedi">Stok Adedi:</label>
                            <input type="text" id="stokAdedi" style="background-color:white" disabled>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="bottom-section">
            <div class="custom-section">

                <label for="adet">Adet Giriniz:</label>
                @Html.TextBoxFor(s => s.Adet, new { min = "1", placeholder = "Adet giriniz", @class = "form-control", type = "number", oninput = "calculateTotal()" })
            </div>

            <div class="custom-section">
                <label for="toplamFiyat">Toplam Fiyat:</label>
                @Html.TextBoxFor(s => s.ToplamFiyat, new { @style = "background-color:white", @class = "form-control", @readonly = "readonly" })
            </div>

            <div class="custom-section">
                <button id="teklifOlustur" type="submit" class="submit-button btn  btn-block">
                    <label>Teklif Oluştur</label>
                </button>
            </div>

        </div>

    </div>

    <div class="table-responsive">
        <table class="table" id="teklifid">
            <thead>
                <tr>
                    <th style="font-weight:bold;">TeklifID</th>
                    <th style="font-weight:bold;">MüsteriID</th>
                    <th style="font-weight:bold;">AracıKurumID</th>
                    <th style="font-weight:bold;">ÜrünID</th>
                    <th style="font-weight:bold;">Birim Fiyatı</th>
                    <th style="font-weight:bold;">Toplam Fiyat</th>
                    <th style="font-weight:bold;">Oluşturma Zamanı</th>
                    <th style="font-weight:bold;">Güncelleme Zamanı</th>
                    <th style="font-weight:bold;">Aktif</th>
                    <th style="font-weight:bold;">Pasif</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>

</form>



<!-- Modal HTML -->
<div id="modal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2 id="modalTitle">Yeni Eklemek İçin</h2>
        <label for="newItem">İsmini Giriniz:</label>
        <input type="text" id="newItem" placeholder="Bilgi giriniz">
        <button id="addButton" type="button" class="add-button btn-primary mt-5 mb-3">Ekle</button>
    </div>

</div>




<script>

    $(document).ready(function () {
        // var table = $('#teklifid').DataTable({ // Tablo ID'si teklifid olarak düzeltildi
        //     "processing": true,
        //     "serverSide": false,
        //     "paging": true,
        //     "searching": true
        // });
        $('#teklifForm').on('submit', function (e) {
            e.preventDefault();

            var formData = $(this).serialize();
            $.ajax({
                url: '@Url.Action("Index", "Home")',
                type: 'POST',
                data: formData,
                success: function (result) {

                    // Dönen veri, tam olarak 12 sütunlu satırlardan oluşmalı
                    $('#teklifid tbody').html(result);

                    // DataTable'ı yeniden başlatın
                    // table.rows.add($('#teklifid tbody tr')).draw(false); // `draw(false)` ile sayfa numarasını değiştirmeden tabloyu güncelle

                },
                error: function (xhr, status, error) {
                    console.error("Hata: " + error);
                }
            });
        });
    });

    document.addEventListener('DOMContentLoaded', () => {
        const modal = document.getElementById('modal');
        const closeModal = document.querySelector('.modal .close');
        const addButton = document.getElementById('addButton');
        const modalTitle = document.getElementById('modalTitle');


        document.getElementById('musteriEkle').onclick = () => openModal('Müşteri Ekle');
        document.getElementById('aracıKurumEkle').onclick = () => openModal('Aracı Kurum Ekle');


        closeModal.onclick = () => closeModalFunc();
        window.onclick = (event) => {
            if (event.target === modal) {
                closeModalFunc();
            }
        };
        addButton.onclick = () => {
            const element = modalTitle.className;
            const newItem = document.getElementById('newItem').value;
            $.post("/Home/Add", { element: element, newItem: newItem }, function (data) {
                if (data) {
                    alert("Başarıyla eklendi!");
                    location.reload(); // Sayfayı yeniden yükleyerek yeni eklenen öğeleri gösterebilirsiniz.
                } else {
                    alert("Eklenirken bir hata oluştu!");
                }
            });

        };


        function openModal(title) {
            modalTitle.innerText = title;
            if (title == "Müşteri Ekle") {
                modalTitle.className = "musteri";
            } else {
                modalTitle.className = "aracı_kurum";
            }

            modal.style.display = 'block';
        }

        function closeModalFunc() {
            modal.style.display = 'none';
        }
    });

    function getUrunDetay(ÜrünID) {
        fetch(`/Home/GetUrunDetay/${ÜrünID}`)
            .then(response => response.json())
            .then(data => {
                document.getElementById('Birim').value = data.birim;
                document.getElementById('BirimFiyat').value = data.birimFiyat;
                document.getElementById('stokAdedi').value = data.stokAdeti;
                document.getElementById('Adet').max = data.stokAdeti;
                calculateTotal();
            })
            .catch(error => console.error('Error:', error));
    }

    function calculateTotal() {
        const BirimFiyat = parseFloat(document.getElementById('BirimFiyat').value) || 0;
        const Adet = parseFloat(document.getElementById('Adet').value) || 0;
        const ToplamFiyat = BirimFiyat * Adet;
        document.getElementById('ToplamFiyat').value = ToplamFiyat.toFixed(2);
    }

</script>